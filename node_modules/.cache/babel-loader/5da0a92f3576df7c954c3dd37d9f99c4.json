{"ast":null,"code":"var _jsxFileName = \"/Users/gimbeomsu/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Accordion from './Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AC = styled.div`\n.wrapper{\n    display:flex;\n    height:100vh;\n    width:100vw;\n    justify-content:center;\n    align-items:center;\n}\n`;\n\nfunction App() {\n  _s();\n\n  // App.js\n  const [message, setMessage] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    fetch('/home1').then(response => response.text()).then(message => {\n      setMessage(message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Profile_PJ\",\n        component: Profile_PJ,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"React Accordion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accordion\",\n          children: data.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: item.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: item.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"ZSwccVuCWGtsaEn12creN9VOqww=\");\n\n_c = App;\nconst data = [{\n  question: 'hello',\n  answer: 'ggafkgoakogako '\n}];\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimbeomsu/Desktop/my-app/src/App.js"],"names":["React","Component","useEffect","Route","Switch","Profile","Profile_PJ","styled","ThemeProvider","useState","Link","Accordion","AC","div","App","message","setMessage","open","setOpen","fetch","then","response","text","data","map","item","i","question","answer","S","Main","props","theme","colors","bgColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,EAAE,GAAGL,MAAM,CAACM,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AASA,SAASC,GAAT,GAAe;AAAA;;AACX;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,KAAK,CAAC,QAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEML,OAAO,IAAI;AACjBC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACC,KAJD;AAKC,GANI,EAMH,EANG,CAAT;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI,QAAC,MAAD;AAAA,8BACQ,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEV;AAAjC;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAEC,UAArC;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEd;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBAEOiB,IAAI,CAACC,GAAL,CAAS,CAACC,IAAD,EAAMC,CAAN,kBACN;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI;AAAA,0BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,wBAA0BF,IAAI,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AAFP;AAAA;AAAA;AAAA;AAAA,gBAFc;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqCH;;GAlDQd,G;;KAAAA,G;AAmDT,MAAMS,IAAI,GAAC,CACP;AACII,EAAAA,QAAQ,EAAC,OADb;AAEIC,EAAAA,MAAM,EACN;AAHJ,CADO,CAAX;AASA,eAAed,GAAf;AACA,MAAMe,CAAC,GAAG,EAAV;AACAA,CAAC,CAACC,IAAF,GAASvB,MAAM,CAACM,GAAI;AACpB;AACA;AACA,sBAAsBkB,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,OAAQ;AAC1D,CAJA","sourcesContent":["import React, { Component, useEffect} from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Accordion from './Accordion';\n\nconst AC = styled.div`\n.wrapper{\n    display:flex;\n    height:100vh;\n    width:100vw;\n    justify-content:center;\n    align-items:center;\n}\n`;\nfunction App() {\n    // App.js\n\n    const [message, setMessage] = useState(\"\");\n    const [open, setOpen] = useState(false);\n    useEffect(() => {\n        fetch('/home1')\n        .then(response => response.text())\n        .then(message => {\n        setMessage(message);\n        });\n        },[])\n        \n    return (\n        <div className='wrapper'>\n            <Switch>\n                    <Route exact path=\"/\" component={Profile} />\n                    <Route path=\"/Profile_PJ\" component={Profile_PJ}>\n                    <h1>React Accordion</h1>\n      <div className=\"accordion\">\n            \n            {data.map((item,i)=> (\n                <div className='item'>\n                    <div className='title'>\n                        <h2>{item.question}</h2>\n                    </div>\n                    <div className='content'>{item.answer}</div>\n                </div>\n            ))}\n      </div>\n                    \n                    </Route>\n            </Switch>\n\n            {/*<Switch2 value={value} onChange={value => setValue(value)} /> */}\n            {/*   <ThemeProvider theme={theme}>\n                <S.Main>\n              \n                    <Button title={theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기'}\n                        click={toggleTheme} />\n                        \n                </S.Main>\n             \n               \n    </ThemeProvider>\n            */}\n        \n        </div>\n    );\n\n}\nconst data=[\n    {\n        question:'hello',\n        answer:\n        'ggafkgoakogako ' \n    }\n]\n\n\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;"]},"metadata":{},"sourceType":"module"}