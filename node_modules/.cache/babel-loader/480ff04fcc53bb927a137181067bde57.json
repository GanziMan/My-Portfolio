{"ast":null,"code":"var _jsxFileName = \"/Users/gimbeomsu/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About } from './pages';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Button from './components/Button';\nimport { dark } from './theme';\nimport { light } from './theme';\nimport useTheme from './useTheme';\nimport { useState } from 'react';\nimport Switch1 from './Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [themeMode, toggleTheme] = useTheme(); // hook 함수 하용\n\n  const theme = themeMode === 'light' ? light : dark; // 테마 환경에 맞는 테마 컬러 가져오기.\n\n  const [value, setValue] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(S.Main, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          title: theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기',\n          click: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app\",\n            children: /*#__PURE__*/_jsxDEV(Switch1, {\n              isOn: value,\n              onColor: \"#EF476F\",\n              handleToggle: () => setValue(!value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"ISYw5V1lnLIvH6MtDD1XvLlxyh8=\", false, function () {\n  return [useTheme];\n});\n\n_c = App;\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimbeomsu/my-app/src/App.js"],"names":["React","Component","Route","Switch","Home","About","Menubar","Profile","Profile_PJ","Link","BrowserRouter","styled","ThemeProvider","Button","dark","light","useTheme","useState","Switch1","App","themeMode","toggleTheme","theme","value","setValue","S","Main","div","props","colors","bgColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,UAApB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BL,QAAQ,EAAzC,CADW,CACkC;;AAC7C,QAAMM,KAAK,GAAGF,SAAS,KAAK,OAAd,GAAwBL,KAAxB,GAAgCD,IAA9C,CAFW,CAEyC;;AACpD,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,sBACI;AAAA,2BACU,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEK,KAAtB;AAAA,6BACN,QAAC,CAAD,CAAG,IAAH;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEA,KAAK,KAAK,OAAV,GAAoB,eAApB,GAAsC,eAArD;AACQ,UAAA,KAAK,EAAED;AADf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGc;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,mCACpB,QAAC,OAAD;AACE,cAAA,IAAI,EAAEE,KADR;AAEE,cAAA,OAAO,EAAC,SAFV;AAGE,cAAA,YAAY,EAAE,MAAMC,QAAQ,CAAC,CAACD,KAAF;AAH9B;AAAA;AAAA;AAAA;AAAA;AADoB;AAAA;AAAA;AAAA;AAAA,kBADA,eASpB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAToB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA;AADV;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA5BQJ,G;UAC4BH,Q;;;KAD5BG,G;AA8BT,eAAeA,GAAf;AACA,MAAMM,CAAC,GAAG,EAAV;AACAA,CAAC,CAACC,IAAF,GAASf,MAAM,CAACgB,GAAI;AACpB;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACN,KAAN,CAAYO,MAAZ,CAAmBC,OAAQ;AAC1D,CAJA","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About } from './pages';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Button from './components/Button';\nimport { dark } from './theme';\nimport { light } from './theme';\nimport useTheme from './useTheme';\nimport { useState } from 'react';\nimport Switch1 from './Switch';\nfunction App() {\n    const [themeMode, toggleTheme] = useTheme(); // hook 함수 하용\n    const theme = themeMode === 'light' ? light : dark; // 테마 환경에 맞는 테마 컬러 가져오기.\n    const [value, setValue] = useState(false);\n    return (\n        <div>\n                  <ThemeProvider theme={theme}>\n            <S.Main>\n                <Button title={theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기'}\n                        click={toggleTheme}/>\n                          <div className=\"app\">\n                          <div className=\"app\">\n      <Switch1\n        isOn={value}\n        onColor=\"#EF476F\"\n        handleToggle={() => setValue(!value)}\n      />\n    </div> \n\n      <Switch />\n    </div>\n            </S.Main>\n        </ThemeProvider>\n\n           \n        </div>\n    );\n\n}\n\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;"]},"metadata":{},"sourceType":"module"}