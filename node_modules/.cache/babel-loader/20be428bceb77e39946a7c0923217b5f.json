{"ast":null,"code":"var _jsxFileName = \"/Users/gimbeomsu/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About } from './pages';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Button from './Button';\nimport { dark } from './theme';\nimport { light } from './theme';\nimport { useState } from 'react';\nimport { useTheme } from './useTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    const theme = themeMode === 'light' ? light : dark; // 테마 환경에 맞는 테마 컬러 가져오기.\n\n    const toggleTheme = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light'); // 테마 변경하기 이벤트\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(S.Main, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            title: theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기',\n            click: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Profile_PJ\",\n          component: Profile_PJ\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;","map":{"version":3,"sources":["/Users/gimbeomsu/my-app/src/App.js"],"names":["React","Component","Route","Switch","Home","About","Menubar","Profile","Profile_PJ","Link","BrowserRouter","styled","ThemeProvider","Button","dark","light","useState","useTheme","App","render","theme","themeMode","toggleTheme","setThemeMode","S","Main","div","props","colors","bgColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AACxBkB,EAAAA,MAAM,GAAG;AAEL,UAAMC,KAAK,GAAGC,SAAS,KAAK,OAAd,GAAwBN,KAAxB,GAAgCD,IAA9C,CAFK,CAE+C;;AAEpD,UAAMQ,WAAW,GAAG,MAAMC,YAAY,CAACF,SAAS,KAAK,OAAd,GAAwB,MAAxB,GAAiC,OAAlC,CAAtC,CAJK,CAI6E;;;AAClF,wBACI;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,KAAK,EAAED,KAAtB;AAAA,+BACI,QAAC,CAAD,CAAG,IAAH;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEA,KAAK,KAAK,OAAV,GAAoB,eAApB,GAAsC,eAArD;AACI,YAAA,KAAK,EAAEE;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,MAAD;AAAA,gCAGI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEf;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,aAAZ;AAA0B,UAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAtBuB;;AAyB5B,eAAeU,GAAf;AACA,MAAMM,CAAC,GAAG,EAAV;AACAA,CAAC,CAACC,IAAF,GAASd,MAAM,CAACe,GAAI;AACpB;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACP,KAAN,CAAYQ,MAAZ,CAAmBC,OAAQ;AAC1D,CAJA","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About } from './pages';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Button from './Button';\nimport { dark } from './theme';\nimport { light } from './theme';\nimport { useState } from 'react';\nimport { useTheme } from './useTheme';\n\nclass App extends Component {\n    render() {\n\n        const theme = themeMode === 'light' ? light : dark; // 테마 환경에 맞는 테마 컬러 가져오기.\n\n        const toggleTheme = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light'); // 테마 변경하기 이벤트\n        return (\n            <div>\n                <ThemeProvider theme={theme}>\n                    <S.Main>\n                        <Button title={theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기'}\n                            click={toggleTheme} />\n                    </S.Main>\n                </ThemeProvider>\n                <Switch>\n\n\n                    <Route exact path=\"/\" component={Profile} />\n                    <Route path=\"/Profile_PJ\" component={Profile_PJ} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;"]},"metadata":{},"sourceType":"module"}