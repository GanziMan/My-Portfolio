{"ast":null,"code":"import { useState, useCallback } from 'react';\nexport default function useLayout() {\n  const [layout, setLayout] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  const onLayout = useCallback(e => setLayout(e.nativeEvent.layout), []);\n  return {\n    onLayout,\n    ...layout\n  };\n}","map":{"version":3,"sources":["/Users/gimbeomsu/my-app/node_modules/react-native-web-hooks/src/hooks/useLayout.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,EAAmB,WAAnB,QAAsC,OAAtC;AAMA,eAAc,SAAU,SAAV,GAAmB;AAC/B,QAAM,CAAC,MAAD,EAAS,SAAT,IAAsB,QAAQ,CAAS;AAC3C,IAAA,CAAC,EAAE,CADwC;AAE3C,IAAA,CAAC,EAAE,CAFwC;AAG3C,IAAA,KAAK,EAAE,CAHoC;AAI3C,IAAA,MAAM,EAAE;AAJmC,GAAT,CAApC;AAOA,QAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,WAAF,CAAc,MAAf,CAAf,EAAuC,EAAvC,CAA5B;AAEA,SAAO;AACL,IAAA,QADK;AAEL,OAAG;AAFE,GAAP;AAID","sourcesContent":["import { useState, useCallback } from 'react';\nimport { LayoutChangeEvent } from 'react-native';\n\ntype Layout = { width: number; height: number; x: number; y: number };\ntype OnLayout = (event: LayoutChangeEvent) => void;\n\nexport default function useLayout(): Layout & { onLayout: OnLayout } {\n  const [layout, setLayout] = useState<Layout>({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  });\n\n  const onLayout = useCallback(e => setLayout(e.nativeEvent.layout), []);\n\n  return {\n    onLayout,\n    ...layout,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}