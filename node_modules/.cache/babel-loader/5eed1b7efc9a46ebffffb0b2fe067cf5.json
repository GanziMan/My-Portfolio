{"ast":null,"code":"var _jsxFileName = \"/Users/gimbeomsu/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About } from './pages';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Button from './components/Button';\nimport { dark } from './theme';\nimport { light } from './theme';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [themeMode, setThemeMode] = useState('light');\n  const theme = themeMode === 'light' ? light : dark;\n\n  const toggleTheme = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light'); // 테마 변경하기 이벤트\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(S.Main, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          title: theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기',\n          click: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"2jgFzhVfLTZFrXwxkMllkXBiQUY=\");\n\n_c = App;\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimbeomsu/my-app/src/App.js"],"names":["React","Component","Route","Switch","Home","About","Menubar","Profile","Profile_PJ","Link","BrowserRouter","styled","ThemeProvider","Button","dark","light","useState","App","themeMode","setThemeMode","theme","toggleTheme","S","Main","div","props","colors","bgColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEP,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,OAAD,CAA1C;AACA,QAAMI,KAAK,GAAGF,SAAS,KAAK,OAAd,GAAwBH,KAAxB,GAAgCD,IAA9C;;AACA,QAAMO,WAAW,GAAG,MAAMF,YAAY,CAACD,SAAS,KAAK,OAAd,GAAwB,MAAxB,GAAiC,OAAlC,CAAtC,CAJO,CAI2E;;;AAErF,sBACO;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEE,KAAtB;AAAA,6BACJ,QAAC,CAAD,CAAG,IAAH;AAAA,+BACA,QAAC,MAAD;AAAS,UAAA,KAAK,EAAEA,KAAK,KAAI,OAAT,GAAkB,eAAlB,GAAoC,eAApD;AACa,UAAA,KAAK,EAAEC;AADpB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADP;AAYJ;;GAlBQJ,G;;KAAAA,G;AAoBT,eAAeA,GAAf;AACA,MAAMK,CAAC,GAAG,EAAV;AACAA,CAAC,CAACC,IAAF,GAASZ,MAAM,CAACa,GAAI;AACpB;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACL,KAAN,CAAYM,MAAZ,CAAmBC,OAAQ;AAC1D,CAJA","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About } from './pages';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Button from './components/Button';\nimport { dark } from './theme';\nimport { light } from './theme';\nimport { useState } from 'react';\n\nfunction App() {\n   \n        const [themeMode, setThemeMode] = useState('light');\n        const theme = themeMode === 'light' ? light : dark;\n        const toggleTheme = () => setThemeMode(themeMode === 'light' ? 'dark' : 'light'); // 테마 변경하기 이벤트\n\n     return (\n            <div>\n                <ThemeProvider theme={theme}>\n            <S.Main>\n            <Button  title={theme ==='light'? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기' }\n                         click={toggleTheme}/>\n            </S.Main>\n        </ThemeProvider>\n              \n            </div>\n        );\n    \n}\n\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;"]},"metadata":{},"sourceType":"module"}