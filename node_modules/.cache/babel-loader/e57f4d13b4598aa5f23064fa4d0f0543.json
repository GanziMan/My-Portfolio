{"ast":null,"code":"var _jsxFileName = \"/Users/gimbeomsu/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About } from './pages';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Button from './components/Button';\nimport { dark } from './theme';\nimport { light } from './theme';\nimport useTheme from './useTheme';\nimport { useState } from 'react';\nimport Switch1 from './Switch';\nimport Switch2 from 'expo-dark-mode-switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [themeMode, toggleTheme] = useTheme(); // hook 함수 하용\n\n  const theme = themeMode === 'light' ? light : dark; // 테마 환경에 맞는 테마 컬러 가져오기.\n\n  const [value, setValue] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Switch2, {\n      value: value,\n      onChange: value => setValue(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(S.Main, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          title: theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기',\n          click: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/Profile_PJ\",\n            component: Profile_PJ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"ISYw5V1lnLIvH6MtDD1XvLlxyh8=\", false, function () {\n  return [useTheme];\n});\n\n_c = App;\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimbeomsu/Desktop/my-app/src/App.js"],"names":["React","Component","Route","Switch","Home","About","Menubar","Profile","Profile_PJ","Link","BrowserRouter","styled","ThemeProvider","Button","dark","light","useTheme","useState","Switch1","Switch2","App","themeMode","toggleTheme","theme","value","setValue","S","Main","div","props","colors","bgColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,SAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,SAAD,EAAYC,WAAZ,IAA2BN,QAAQ,EAAzC,CADW,CACkC;;AAC7C,QAAMO,KAAK,GAAGF,SAAS,KAAK,OAAd,GAAwBN,KAAxB,GAAgCD,IAA9C,CAFW,CAEyC;;AACpD,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,sBACI;AAAA,4BAEC,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEO,KAAhB;AAAuB,MAAA,QAAQ,EAAEA,KAAK,IAAIC,QAAQ,CAACD,KAAD;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFD,eAGG,QAAC,aAAD;AAAe,MAAA,KAAK,EAAED,KAAtB;AAAA,6BACK,QAAC,CAAD,CAAG,IAAH;AAAA,gCAEI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEA,KAAK,KAAK,OAAV,GAAoB,eAApB,GAAsC,eAArD;AACI,UAAA,KAAK,EAAED;AADX;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAIS,QAAC,MAAD;AAAA,kCACT,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAEf;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADS,eAET,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,aAAZ;AAA0B,YAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFS;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GA1BQY,G;UAC4BJ,Q;;;KAD5BI,G;AA4BT,eAAeA,GAAf;AACA,MAAMM,CAAC,GAAG,EAAV;AACAA,CAAC,CAACC,IAAF,GAAShB,MAAM,CAACiB,GAAI;AACpB;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACN,KAAN,CAAYO,MAAZ,CAAmBC,OAAQ;AAC1D,CAJA","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Home, About } from './pages';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport Button from './components/Button';\nimport { dark } from './theme';\nimport { light } from './theme';\nimport useTheme from './useTheme';\nimport { useState } from 'react';\nimport Switch1 from './Switch';\nimport Switch2 from 'expo-dark-mode-switch';\nfunction App() {\n    const [themeMode, toggleTheme] = useTheme(); // hook 함수 하용\n    const theme = themeMode === 'light' ? light : dark; // 테마 환경에 맞는 테마 컬러 가져오기.\n    const [value, setValue] = useState(false);\n    return (\n        <div>\n         \n         <Switch2 value={value} onChange={value => setValue(value)} />\n           <ThemeProvider theme={theme}>\n                <S.Main>\n              \n                    <Button title={theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기'}\n                        click={toggleTheme} />\n                         <Switch>\n                <Route exact path=\"/\" component={Profile} />\n                <Route path=\"/Profile_PJ\" component={Profile_PJ} />\n            </Switch>\n                </S.Main>\n               \n    </ThemeProvider>\n           \n\n\n        </div>\n    );\n\n}\n\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;"]},"metadata":{},"sourceType":"module"}