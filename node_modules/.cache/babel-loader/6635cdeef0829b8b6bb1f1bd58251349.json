{"ast":null,"code":"var _jsxFileName = \"/Users/gimbeomsu/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useState } from 'react';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\nimport Toggle from './Toggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // App.js\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    // if the theme is not light, then set it to dark\n    if (theme === 'light') {\n      setTheme('dark'); // otherwise, it should be light\n    } else {\n      setTheme('light');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme === 'light' ? lightTheme : darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: \"400px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Toggle, {\n          theme: theme,\n          toggleTheme: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), \"It's a \", theme === 'light' ? 'light theme' : 'dark theme', \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Profile_PJ\",\n          component: Profile_PJ\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = App;\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimbeomsu/Desktop/my-app/src/App.js"],"names":["React","Component","Route","Switch","Menubar","Profile","Profile_PJ","styled","ThemeProvider","useState","lightTheme","darkTheme","GlobalStyles","Toggle","App","theme","setTheme","toggleTheme","position","top","S","Main","div","props","colors","bgColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMQ,WAAW,GAAG,MAAM;AACtB;AACA,QAAIF,KAAK,KAAK,OAAd,EAAuB;AACnBC,MAAAA,QAAQ,CAAC,MAAD,CAAR,CADmB,CAEnB;AACH,KAHD,MAGO;AACHA,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACH;AACJ,GARD;;AASA,sBACI;AAAA,2BAEI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAED,KAAK,KAAK,OAAV,GAAoBL,UAApB,GAAiCC,SAAvD;AAAA,8BACA;AAAK,QAAA,KAAK,EAAE;AAACO,UAAAA,QAAQ,EAAC,OAAV;AAAkBC,UAAAA,GAAG,EAAC;AAAtB,SAAZ;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEJ,KAAf;AAAsB,UAAA,WAAW,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,aAEYF,KAAK,KAAK,OAAV,GAAoB,aAApB,GAAoC,YAFhD;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAKI;AAAA,+BAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAFJ,uBALJ,eASI,QAAC,MAAD;AAAA,gCAEA,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEV;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,aAAZ;AAA0B,UAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH;;GAnDQQ,G;;KAAAA,G;AAqDT,eAAeA,GAAf;AACA,MAAMM,CAAC,GAAG,EAAV;AACAA,CAAC,CAACC,IAAF,GAASd,MAAM,CAACe,GAAI;AACpB;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACR,KAAN,CAAYS,MAAZ,CAAmBC,OAAQ;AAC1D,CAJA","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useState } from 'react';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\nimport Toggle from './Toggle';\nfunction App() {\n    // App.js\n    const [theme, setTheme] = useState('light');\n    const toggleTheme = () => {\n        // if the theme is not light, then set it to dark\n        if (theme === 'light') {\n            setTheme('dark');\n            // otherwise, it should be light\n        } else {\n            setTheme('light');\n        }\n    }\n    return (\n        <div>\n           \n            <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n            <div style={{position:\"fixed\",top:\"400px\"}}>\n                <Toggle theme={theme} toggleTheme={toggleTheme} />\n                It's a {theme === 'light' ? 'light theme' : 'dark theme'}!\n            </div>\n                <>\n                \n                    <GlobalStyles />\n                </>\n                <Switch>\n              \n                <Route exact path=\"/\" component={Profile} />\n                <Route path=\"/Profile_PJ\" component={Profile_PJ} />\n            </Switch>\n            </ThemeProvider>\n\n            \n\n\n            {/*<Switch2 value={value} onChange={value => setValue(value)} /> */}\n            {/*   <ThemeProvider theme={theme}>\n                <S.Main>\n              \n                    <Button title={theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기'}\n                        click={toggleTheme} />\n                        \n                </S.Main>\n             \n               \n    </ThemeProvider>\n            */}\n\n\n        </div>\n    );\n\n}\n\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;"]},"metadata":{},"sourceType":"module"}