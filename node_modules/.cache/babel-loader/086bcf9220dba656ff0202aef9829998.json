{"ast":null,"code":"var _jsxFileName = \"/Users/gimbeomsu/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useState } from 'react';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\nimport Toggle from './Toggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // App.js\n  const [message, setMessage] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Profile_PJ\",\n        component: Profile_PJ\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n\n_c = App;\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimbeomsu/Desktop/my-app/src/App.js"],"names":["React","Component","Route","Switch","Menubar","Profile","Profile_PJ","styled","ThemeProvider","useState","lightTheme","darkTheme","GlobalStyles","Toggle","App","message","setMessage","S","Main","div","props","theme","colors","bgColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEA,sBACI;AAAA,2BAGI,QAAC,MAAD;AAAA,8BACQ,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEJ;AAAjC;AAAA;AAAA;AAAA;AAAA,cADR,eAEQ,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAhCQQ,G;;KAAAA,G;AAkCT,eAAeA,GAAf;AACA,MAAMG,CAAC,GAAG,EAAV;AACAA,CAAC,CAACC,IAAF,GAASX,MAAM,CAACY,GAAI;AACpB;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,OAAQ;AAC1D,CAJA","sourcesContent":["import React, { Component} from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Menubar from './hoc/Menu/Menubar';\nimport Profile from './hoc/Menu/Profile';\nimport Profile_PJ from './hoc/Menu/Profile_PJ';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { useState } from 'react';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\nimport Toggle from './Toggle';\nfunction App() {\n    // App.js\n    const [message, setMessage] = useState(\"\");\n\n    return (\n        <div>\n\n           \n            <Switch>\n                    <Route exact path=\"/\" component={Profile} />\n                    <Route path=\"/Profile_PJ\" component={Profile_PJ} />\n                </Switch>\n\n\n\n            {/*<Switch2 value={value} onChange={value => setValue(value)} /> */}\n            {/*   <ThemeProvider theme={theme}>\n                <S.Main>\n              \n                    <Button title={theme === 'light' ? '일반모드로 테마 변경하기' : '다크모드로 테마 변경하기'}\n                        click={toggleTheme} />\n                        \n                </S.Main>\n             \n               \n    </ThemeProvider>\n            */}\n\n\n        </div>\n    );\n\n}\n\nexport default App;\nconst S = {};\nS.Main = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${props => props.theme.colors.bgColor};\n`;"]},"metadata":{},"sourceType":"module"}