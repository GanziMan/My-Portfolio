{"ast":null,"code":"var _jsxFileName = \"/Users/gimbeomsu/my-app/src/DynamicRoutes.js\";\nimport React, { Suspense, lazy } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DynamicRoutes() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        render: _ref => {\n          let {\n            history,\n            location,\n            match\n          } = _ref;\n          const Page = /*#__PURE__*/lazy(() => import(\"./pages\" + location.pathname).catch(e => {\n            if (/not find module/.test(e.message)) {\n              return import(\"./pages/NotFound.js\");\n            }\n\n            if (/Loading chunk \\d+ failed/.test(e.message)) {\n              window.location.reload();\n              return;\n            }\n\n            throw e;\n          }));\n          return /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading..\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 35\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = DynamicRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicRoutes\");","map":{"version":3,"sources":["/Users/gimbeomsu/my-app/src/DynamicRoutes.js"],"names":["React","Suspense","lazy","BrowserRouter","Switch","Route","DynamicRoutes","history","location","match","Page","pathname","catch","e","test","message","window","reload"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,MAAM,EAAE,QAAkC;AAAA,cAAjC;AAAEC,YAAAA,OAAF;AAAWC,YAAAA,QAAX;AAAqBC,YAAAA;AAArB,WAAiC;AACxC,gBAAMC,IAAI,gBAAGR,IAAI,CAAC,MAChB,OAAO,YAAYM,QAAQ,CAACG,QAA5B,EAAsCC,KAAtC,CAA6CC,CAAD,IAAO;AACjD,gBAAI,kBAAkBC,IAAlB,CAAuBD,CAAC,CAACE,OAAzB,CAAJ,EAAuC;AACrC,qBAAO,OAAO,qBAAP,CAAP;AACD;;AAED,gBAAI,2BAA2BD,IAA3B,CAAgCD,CAAC,CAACE,OAAlC,CAAJ,EAAgD;AAC9CC,cAAAA,MAAM,CAACR,QAAP,CAAgBS,MAAhB;AACA;AACD;;AACD,kBAAMJ,CAAN;AACD,WAVD,CADe,CAAjB;AAaA,8BACE,QAAC,QAAD;AAAU,YAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB;AAAA,mCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;AArBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;KA9BuBP,a","sourcesContent":["import React, { Suspense, lazy } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nexport default function DynamicRoutes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route\n          path=\"/\"\n          render={({ history, location, match }) => {\n            const Page = lazy(() =>\n              import(\"./pages\" + location.pathname).catch((e) => {\n                if (/not find module/.test(e.message)) {\n                  return import(\"./pages/NotFound.js\");\n                }\n\n                if (/Loading chunk \\d+ failed/.test(e.message)) {\n                  window.location.reload();\n                  return;\n                }\n                throw e;\n              })\n            );\n            return (\n              <Suspense fallback={<div>Loading..</div>}>\n                <Page />\n              </Suspense>\n            );\n          }}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}