{"ast":null,"code":"// By @necolas:\n// https://github.com/necolas/react-native-web/blob/master/docs/guides/web-recipes.md\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener('touchstart', disableHover, true);\n  document.addEventListener('touchmove', disableHover, true);\n  document.addEventListener('mousemove', enableHover, true);\n}\n\nconst isHoverEnabled = () => isEnabled;\n\nexport default isHoverEnabled;","map":{"version":3,"sources":["/Users/gimbeomsu/my-app/node_modules/react-native-web-hooks/src/isHoverEnabled.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SAAS,SAAT,QAA0B,+BAA1B;AAEA,IAAI,SAAS,GAAG,KAAhB;;AAEA,IAAI,SAAJ,EAAe;AACb;;;;;;;AAOG;AACH,QAAM,kBAAkB,GAAG,IAA3B;AACA,MAAI,kBAAkB,GAAG,CAAzB;;AAEA,WAAS,WAAT,GAAoB;AAClB,QAAI,SAAS,IAAI,IAAI,CAAC,GAAL,KAAa,kBAAb,GAAkC,kBAAnD,EAAuE;AACrE;AACD;;AACD,IAAA,SAAS,GAAG,IAAZ;AACD;;AAED,WAAS,YAAT,GAAqB;AACnB,IAAA,kBAAkB,GAAG,IAAI,CAAC,GAAL,EAArB;;AACA,QAAI,SAAJ,EAAe;AACb,MAAA,SAAS,GAAG,KAAZ;AACD;AACF;;AAED,EAAA,QAAQ,CAAC,gBAAT,CAA0B,YAA1B,EAAwC,YAAxC,EAAsD,IAAtD;AACA,EAAA,QAAQ,CAAC,gBAAT,CAA0B,WAA1B,EAAuC,YAAvC,EAAqD,IAArD;AACA,EAAA,QAAQ,CAAC,gBAAT,CAA0B,WAA1B,EAAuC,WAAvC,EAAoD,IAApD;AACD;;AAED,MAAM,cAAc,GAAG,MAAM,SAA7B;;AAEA,eAAe,cAAf","sourcesContent":["// By @necolas:\n// https://github.com/necolas/react-native-web/blob/master/docs/guides/web-recipes.md\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nlet isEnabled = false;\n\nif (canUseDOM) {\n  /**\n   * Web browsers emulate mouse events (and hover states) after touch events.\n   * This code infers when the currently-in-use modality supports hover\n   * (including for multi-modality devices) and considers \"hover\" to be enabled\n   * if a mouse movement occurs more than 1 second after the last touch event.\n   * This threshold is long enough to account for longer delays between the\n   * browser firing touch and mouse events on low-powered devices.\n   */\n  const HOVER_THRESHOLD_MS = 1000;\n  let lastTouchTimestamp = 0;\n\n  function enableHover() {\n    if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n      return;\n    }\n    isEnabled = true;\n  }\n\n  function disableHover() {\n    lastTouchTimestamp = Date.now();\n    if (isEnabled) {\n      isEnabled = false;\n    }\n  }\n\n  document.addEventListener('touchstart', disableHover, true);\n  document.addEventListener('touchmove', disableHover, true);\n  document.addEventListener('mousemove', enableHover, true);\n}\n\nconst isHoverEnabled = () => isEnabled;\n\nexport default isHoverEnabled;\n"]},"metadata":{},"sourceType":"module"}